# -*- mode: shell-script -*-

src_file=../src/lib/libpretty.sh

prefix_cmd="
. /etc/shlib

source '$src_file'
pretty:init
"

export COLUMNS=50


try 'Wrap "true"' \
    'with color: "Wrap true" expected sequence of output'
noerror
is out "- true
- true                                         W
- true                                [  OK  ] W" NOCOLOR NOPOS TRIM

try 'Wrap "false"' \
    'with color: "Wrap false" expected sequence of output'
is errlvl 1
is out reg "^ - false
 - false                                        W
 - false                               \[FAILED\] W
Error in wrapped command:
 pwd: [^$NL]+
 code:
  \| false
 output \(1\):" NOCOLOR NOPOS RTRIM


try 'Wrap -q "true"' \
    'Bare "Wrap true" with quiet mode'
noerror
is out ""


try 'Wrap -q "false"' \
    'Bare "Wrap false" with quiet mode'
is errlvl 1
is out reg "\
Error in wrapped command:
 pwd: [^$NL]+
 code:
  \| false
 output \(1\):
" NOCOLOR

try 'Wrap -d "My command"  "true"' \
    'Bare "Wrap true" with description'
noerror
is out " - My command
 - My command                                   W
 - My command                          [  OK  ] W" NOPOS NOCOLOR RTRIM

try 'Wrap -d "My command" "false"' \
    'Bare wrap with description mode'
is errlvl 1
is out reg " - My command
 - My command                                   W
 - My command                          \[FAILED\] W
Error in wrapped command:
 pwd: [^$NL]+
 code:
  \| false
 output \(1\):" NOCOLOR NOPOS RTRIM

try 'Wrap -q -d "My successful command" "true"' \
    'Description "Wrap true" with quiet mode'
noerror
is out "" RTRIM

try 'Wrap -q -d "My failing command" "false"' \
    'Description "Wrap false" with quiet mode'
is out reg "\
Error in wrapped command:
 pwd: [^$NL]+
 code:
  \| false
 output \(1\):" NOCOLOR RTRIM


try 'Wrap -qd "My failing command" "false"' \
    'support of aggregated single chars options'
is out reg "\
Error in wrapped command:
 pwd: [^$NL]+
 code:
  \| false
 output \(1\):" NOCOLOR RTRIM


try 'Wrap -qd="My failing command" "false"' \
    'support of "=" usage for specifying option values'
is out reg "\
Error in wrapped command:
 pwd: [^$NL]+
 code:
  \| false
 output \(1\):" NOCOLOR RTRIM

try 'Wrap -qd="My failing command" -- "false -d -q "' \
    'support of -- for not interpreting remainder of command line'
is out reg "\
Error in wrapped command:
 pwd: [^$NL]+
 code:
  \| false -d -q
 output \(1\):" NOCOLOR RTRIM


##
## EOF Mode
##

try 'Wrap -q -d "My failing command" <<EOF

false &&
false &&
false

EOF' \
    'stdin Wrap with description and quiet mode'
is out reg "\
Error in wrapped command:
 pwd: [^$NL]*
 code:
  \|
  \| false &&
  \| false &&
  \| false
 output \(1\):" NOCOLOR RTRIM

try 'Wrap -q -d "My successful command" <<EOF

false ||
false ||
true

EOF' \
    'Description Wrap succeeding with quiet mode'
is out "" NOCOLOR RTRIM


##
## Wrapped Elt should not collide
##

try '
ansi_color yes
Wrap -d "Inbed Elt" <<EOF

. /etc/shlib

source '$src_file'
pretty:init

ansi_color yes
print_info_char "*"
Elt Hello; Feed
false

EOF' \
    'Elt in Wrap should not collide'
is errlvl 1
is err ""
is out part "\
 code:
  |
  | . /etc/shlib
  |
  | source ../src/lib/libpretty.sh
  | pretty:init
  |
  | ansi_color yes
  | print_info_char \"*\"
  | Elt Hello; Feed
  | false
 output (1):
  |  -                                          *
  |  - Hello                                    *" NOCOLOR NOPOS RTRIM



##
## Wrapped Elt should use a smaller full line
##

try '
ansi_color no
Wrap -d "Inbed Elt" <<EOF

. /etc/shlib

source '$src_file'
pretty:init

Elt Toto
print_info foo
print_status success
Feed
Wrap -d "inner Wrap" true
false
EOF' \
    'Wrap in wrap gets smaller line'
is errlvl 1
is err ""
is out part "\
 code:
  |
  | . /etc/shlib
  |
  | source ../src/lib/libpretty.sh
  | pretty:init
  |
  | Elt Toto
  | print_info foo
  | print_status success
  | Feed
  | Wrap -d \"inner Wrap\" true
  | false
 output (1):
  |  - Toto       foo                  [  OK  ]
  |  - inner Wrap                      [  OK  ] W" RTRIM


##
## Wrap in verbose mode
##

try '
export VERBOSE=true
ansi_color no
Wrap -v -d "Simple" <<EOF
echo "hello"
true
EOF' \
    'Wrap -v in VERBOSE mode'
noerror
is out "\
 - Simple         output follows                W
  | hello
  .. Simple                            [  OK  ]" RTRIM

try '
export VERBOSE=
ansi_color no
Wrap -v -d "Simple" <<EOF
echo "hello"
true
EOF' \
    'Wrap -v not in VERBOSE mode'
noerror
is out "\
 - Simple                              [  OK  ] W" RTRIM

try '
export VERBOSE=
ansi_color no
Wrap -v -d "Simple" <<EOF
echo hello
exit 63
EOF' \
    'failing Wrap -v not in VERBOSE mode'
is errlvl 63
is out reg "\
 - Simple                              \[FAILED\] W
Error in wrapped command:
 pwd: [^$NL]*
 code:
  \| echo hello
  \| exit 63
 output \(63\):
  \| hello" RTRIM

try '
export VERBOSE=true
ansi_color no
Wrap -v -d "Simple" <<EOF
echo hello
exit 63
EOF' \
    'failing Wrap -v in VERBOSE mode'
is errlvl 63
is err ''
# 345678901234567890123456789012345678901234567890
is out reg "\
 - Simple         output follows                W
  \| hello
  .. Simple       errorlevel 63        \[FAILED\]
Error in wrapped command:
 pwd: [^$NL]+
 code:
  \| echo hello
  \| exit 63" RTRIM


##
## Customizable prefixes
##

try '
WRAP_PREFIX_STDOUT="  O:"
WRAP_PREFIX_STDERR="  E:"
WRAP_PREFIX_CODE="  C:"

Wrap -q -d "My failing command" <<EOF

echo "out"
false

EOF' \
    'Wrap may customize prefix'
is out reg "\
Error in wrapped command:
 pwd: [^$NL]*
 code:
  C:
  C:echo \"out\"
  C:false
 output \(1\):
  O:out" NOCOLOR RTRIM

try '
WRAP_PREFIX_STDOUT="  O:"
WRAP_PREFIX_STDERR="  E:"
WRAP_PREFIX_CODE="  C:"

Wrap -q -d "My failing command" <<EOF

echo "err" >&2
false

EOF' \
    'Wrap may customize prefix'
is out reg "\
Error in wrapped command:
 pwd: [^$NL]*
 code:
  C:
  C:echo \"err\" >&2
  C:false
 output \(1\):
  E:err" NOCOLOR RTRIM


##
## Line wrapping
##

try '
Wrap -wd "My failing command" <<EOF

echo "15 reprehenderit in voluptate velit esse cillum dolore eu fugiat in voluptate velit esse cillum dolore eu fugiat reprehenderit in voluptate velit esse cillum dolore eu fugiat"
false

EOF' \
    'line wrapping occuring'
is out part '
 code:
  |
  | echo "15 reprehenderit in voluptate velit ess\
   .e cillum dolore eu fugiat in voluptate velit \
   .esse cillum dolore eu fugiat reprehenderit in\
   . voluptate velit esse cillum dolore eu fugiat\
   ."
  | false
 output (1):
  | 15 reprehenderit in voluptate velit esse cill\
   .um dolore eu fugiat in voluptate velit esse c\
   .illum dolore eu fugiat reprehenderit in volup\
   .tate velit esse cillum dolore eu fugiat' NOPOS NOCOLOR RTRIM


##
## Subshelling
##

try '

myvar=2
Wrap -sd "My failing command" <<EOF

echo "usage of double quote"
echo '"'usage of single quote'"'
echo \$myvar
return 77

EOF' \
    'using subshell to keep env'
is err ''
is errlvl 77
is out part "
 code:
  |
  | echo \"usage of double quote\"
  | echo 'usage of single quote'
  | echo \$myvar
  | return 77
 output (77):
  | usage of double quote
  | usage of single quote
  | 2" NOPOS NOCOLOR RTRIM


##
## Handling of Ctrl-C
##


setup() {
    cd "$test_tmpdir"; mkdir test1;
    cd test1
    cat <<EOF > foo
#!/bin/bash

. /etc/shlib

source '$src_file'
pretty:init

Wrap -d "sleeping command" <<EOF2
echo "Starting.."
sleep 5
echo "  ..Finished peacefully"
false
EOF2

EOF
    chmod +x foo
}

try '

include pid
{
  setsid $test_tmpdir/test1/foo
} &
pid=$(pid.get_child_pids $!)
sleep 0.2
echo -n ^C  ## simulating display of ^C done by the tty
kill -s SIGINT -$pid
wait $subshell_pid
' 'ctrl-c handling'
is err ''
is out reg ' - sleeping com..
 - sleeping com..                               W
\^C   - sleeping com.. Caught SIGINT                 W
 - sleeping com.. Caught SIGINT        \[FAILED\] W
Error in wrapped command:
 pwd: [^'"$NL"']*
 code:
  \| echo "Starting.."
  \| sleep 5
  \| echo "  ..Finished peacefully"
  \| false
 output \(130\):
  \| Starting..' NOPOS NOCOLOR RTRIM
is errlvl 0


##
## Command type
##


setup() {
    :
}

try '
Wrap -sd "my cmd" false a "b c" "d
e
f"
' 'when command is array, display it as is'
is err ''
is out part '
 cmdline:
  $1: false
  $2: a
  $3: b c
  $4: |
  | d
  | e
  | f
 output (1):' NOPOS NOCOLOR RTRIM
is errlvl 1


##
## No error reports
##


setup() {
    :
}


try '
ansi_color no
Wrap -sd "my cmd" --no-error-report false
' 'preventing error reports to be printed'
is err ''
is out ' - my cmd                              [FAILED] W' NOPOS NOCOLOR RTRIM
is errlvl 1

try '
ansi_color yes
VERBOSE=yes
Wrap -vsd "my cmd" --no-error-report echo "foo"
' 'preventing error reports to be printed'
is err ''
is out ' - my cmd
 - my cmd                                       W
 - my cmd         output follows                W
  | foo
  .. my cmd
  .. my cmd                            [  OK  ]' NOPOS NOCOLOR RTRIM
is errlvl 0

##
## Wrap should not read others options
##

setup() {
    :
}


try '
ansi_color no
Wrap -d "my cmd" -- false -w x
' 'should not read others options'
is err ''
is out part '
 code:
  | false -w x
 output (1):' NOPOS NOCOLOR RTRIM
is errlvl 1


##
## Wrap will output any char (only NUL is not displayed)
##

setup() {
    :
}


ascii_table() { echo -en "$(echo '\'0{0..3}{0..7}{0..7} | tr -d " ")"; }
export -f ascii_table

try '
ansi_color no
Wrap -sd "my cmd" <<EOF
ascii_table
false
EOF
' 'is all chars correctly reported'
is err ''
is out part "
 output (1):
$(ascii_table | sed -r 's/^/  | /g')
"
is errlvl 1


##
## Wrap command echo mode
##

try '
ansi_color no
Wrap -X -d "Simple" <<EOF
echo "hello"
true
EOF' \
    'Wrap -X with no error should not display anything'
noerror
is out "\
 - Simple                              [  OK  ] W" RTRIM

try '
ansi_color no
Wrap -X -d "Simple" <<EOF
echo "hello"
false
EOF' \
    'Wrap -X with error should catch debug lines'
is errlvl 1
is err ""
## can only check one line because of stderr/stdin mix
is out part "\
  | + echo hello\
" RTRIM

try '
VERBOSE=1
ansi_color no
Wrap -X -v -d "Simple" <<EOF
echo "hello"
true
EOF' \
    'Wrap -X -v should catch debug lines'
noerror
## can only check one line because of stderr/stdin mix
is out part "\
  | + echo hello\
" RTRIM


try '
VERBOSE=1
ansi_color no
Wrap -X -v -d "Simple" <<EOF
echo "YYY\$(echo "XXX")"
true
EOF' \
    'Wrap -X -v should keep nested command as nested'
noerror
## can only check one line because of stderr/stdin mix
is out part "\
  | ++ echo XXX\
" RTRIM


try '
VERBOSE=1
ansi_color no
Wrap -X -v -d "Simple" -- echo "YYY\$(echo "XXX")"' \
    'Wrap -X -v should keep nested command as nested in line mode'
noerror
## can only check one line because of stderr/stdin mix
is out part "\
  | ++ echo XXX\
" RTRIM


try '
VERBOSE=1
ansi_color no
Wrap -x -v -d "Simple" <<EOF
echo "YYY"
set -eux
echo "XXX"
true
EOF' \
    'Wrap -x -v should not force +x'
noerror
## can only check one line because of stderr/stdin mix
is out part "\
 - Simple         output follows                W
  | YYY\
" RTRIM
is out part "\
  | + echo XXX\
" RTRIM


##
## Wrapped stderr and stdin should not mix
##

## This is an unsolved problem: annotate-output man page shows that
## it is a complex problem.

# export CODE=$'\
# echo "00 in voluptate velit esse c" >&2
# echo "01 Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do"
# echo "02 eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad" >&2
# echo "03 minim"
# echo "04 aliquip ex ea commodo consequat. Duis aute irure dolor in" >&2
# echo "05 reprehenderit in voluptate velit esse cillum dolore eu fugiat"
# echo "06 nulla pariatur. Excepteur sint occaecat cupidatat non proident," >&2
# echo "07 sunt in culpa qui officia deserunt mollit anim id est laborum."
# echo "08 ui officia deserunt mollit" >&2
# echo "09 minim veniam, quis nostrud exercitation"
# echo "10 nulla pariatur." >&2
# echo "11 Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do"
# echo "12 eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad" >&2
# echo "13 minim veniam, quis nostrud exercitation ullamco laboris nisi ut"
# echo "14 aliquip ex ea commodo consequat. Duis aute irure dolor in" >&2
# echo "15 reprehenderit in voluptate velit esse cillum dolore eu fugiat in voluptate velit esse cillum dolore eu fugiat"
# echo "16 nu" >&2
# echo "17 sunt in culpa qui officia deserunt mollit anim id est laborum in voluptate velit esse cillum dolore eu fugiat."
# echo "18 sint occaecat cupidatat non" >&2
# echo "19 velit esse cillum"
# false
# '

# try '
# Wrap -d "interweaved stderr and stdin" <<EOF
# $CODE
# EOF
# ' 'prevent mixed stderr and stdin'
# is err ''
# is out ' - interweaved ..
#  - interweaved ..                               W
#  - interweaved ..                      [FAILED] W
# Error in wrapped command:
#  pwd: 
#  code:
# '"$(echo "$CODE" | sed -r 's/^/  | /g' | head -n -1)"'
#  output (1):
#   ! 00 in voluptate velit esse c
#   | 01 Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do
#   ! 02 eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
#   | 03 minim
#   ! 04 aliquip ex ea commodo consequat. Duis aute irure dolor in
#   | 05 reprehenderit in voluptate velit esse cillum dolore eu fugiat
#   ! 06 nulla pariatur. Excepteur sint occaecat cupidatat non proident,
#   | 07 sunt in culpa qui officia deserunt mollit anim id est laborum.
#   ! 08 ui officia deserunt mollit
#   | 09 minim veniam, quis nostrud exercitation
#   ! 10 nulla pariatur.
#   | 11 Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do
#   ! 12 eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
#   | 13 minim veniam, quis nostrud exercitation ullamco laboris nisi ut
#   ! 14 aliquip ex ea commodo consequat. Duis aute irure dolor in
#   | 15 reprehenderit in voluptate velit esse cillum dolore eu fugiat in voluptate velit esse cillum dolore eu fugiat
#   ! 16 nu
#   | 17 sunt in culpa qui officia deserunt mollit anim id est laborum in voluptate velit esse cillum dolore eu fugiat.
#   ! 18 sint occaecat cupidatat non
#   | 19 velit esse cillum' NOPOS NOCOLOR RTRIM
